# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Build"

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the `master` branch
on:
  push:
    branches: [ master ]
    tags:
      build*
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    # Run once a week (even if no new code or PRs) to detect random regressions
    - cron: '12 13 * * 2'

env:
  # Allow precise monitoring of the save/restore of Gradle User Home by `gradle-build-action`
  # See https://github.com/marketplace/actions/gradle-build-action?version=v2.1.1#cache-debugging-and-analysis
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
  GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX: "fhir" # change this to invalidate cache

concurrency:
  # github.head_ref uniquely identifies Pull Requests (but is not available when building branches like main or master)
  # github.ref is the fallback used when building for workflows triggered by push
  # Note that || are fallback values (not "concatenations")
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true # Use e.g. ${{ github.ref != 'refs/heads/main' }} (or master, until #2180) to only cancel for PRs not on branch

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build will compile APK, test APK and run tests, lint, etc.
  build:
    runs-on: ubuntu-22.04-8core
    timeout-minutes: 60
    permissions:
      actions: read
      contents: read

    strategy:
      fail-fast: false

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          # Fetch origin/master for spotless ratchet to work
          # https://github.com/diffplug/spotless/issues/1242
          fetch-depth: 0

      - name: Setup machine
        uses: ./.github/actions/commonSetup

      - name: Spotless check
        run: ./gradlew spotlessCheck --scan --full-stacktrace

      - name: Build (full) with Gradle
        run: ./gradlew build --scan --full-stacktrace

      - name: Check with Gradle
        run: ./gradlew check --scan --full-stacktrace

      - name: Release artifacts to local repo
        run: ./gradlew publishReleasePublicationToCIRepository --scan
      - name: Upload maven repo
        uses: actions/upload-artifact@v4
        with:
          name: maven-repository
          path: build/ci-repo

      - name: Zip artifact for debugging
        if: ${{ failure() }}
        run: zip build.zip ./*/build -r

      # Upload the build dir for all the modules for diagnosis
      - name: Upload build dir
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.zip
