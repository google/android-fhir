# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events for the `master` branch
on:
  push:
    branches: [ master ]
    tags:
      run_ci*
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Build will compile APK, test APK and run tests, lint, etc.
  build:

    runs-on: macos-11.0 # use mac build for emulator hardware accelerator

    strategy:
      matrix:
        api-level: [ 24, 27, 29 ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "11"

      - name: Make files executable
        run: chmod +x ./gradlew && chmod +x ./engine/checksum.sh

      - name: Generate cache key
        run: ./engine/checksum.sh checksum.txt

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/modules-2
          key: ${{ runner.os }}-gradlemodules-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradlemodules-
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/jars-3
          key: ${{ runner.os }}-gradlejars-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradlejars-
      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches/build-cache-1
          key: ${{ runner.os }}-gradlebuildcache-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradlebuildcache-

      - name: Spotless check
        if: matrix.api-level == 29  # don't spotless on older APIs
        run: ./gradlew spotlessCheck

      - name: Build
        if: matrix.api-level == 29 # don't run full build on older APIs
        run: ./gradlew build

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          script: ./gradlew connectedCheck --info

      - name: Generage Jacoco test coverage reports
        if: matrix.api-level == 29 # Only generate coverage report on API level 29
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          script: ./gradlew jacocoTestReport --info

      - name: Upload Jacoco test coverage reports to codecov.io
        if: matrix.api-level == 29 # Only upload coverage on API level 29
        uses: codecov/codecov-action@v2
        with:
          files: engine/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml,datacapture/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          fail_ci_if_error: true
          verbose: true

      - name: Release artifacts to local repo
        run: ./gradlew publishReleasePublicationToCIRepository

      - name: Upload maven repo
        uses: actions/upload-artifact@v2
        with:
          name: maven-repository
          path: build/ci-repo

      # Upload the build dir for all the modules for diagnosis
      - name: Upload build dir
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ./*/build

      - name: Copy test results
        if: always()
        run: |
          mkdir -p test-results
          find . -type f -regex ".*[t|androidT]est-results/.*xml" -exec cp {} test-results/ \;

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-results
